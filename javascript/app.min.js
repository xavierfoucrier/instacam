(()=>{let e=document.querySelector(".camera-log"),r=document.querySelector(".camera-input"),t=document.querySelector(".camera-output"),a=new Instacam(document.querySelector("canvas"),{sound:!0,volume:0,done:()=>{e.innerHTML="Instacam is working fine."},fail:r=>{e.innerHTML=`Sorry, Instacam failed to start because you didn't accept the requested permissions to access your camera, or something went wrong. <strong class="camera-log-error">Error: ${r.message}</strong>`},unsupported:()=>{e.innerHTML="Sorry, but it seems that your browser is not supporting requestAnimationFrame, mediaDevices or Promises. Try Instacam in another browser."}});function n(){document.querySelector('[name="quality"]').removeAttribute("disabled"),document.querySelector(".size").classList.remove("disabled");let e=a.save(document.querySelector('[name="format"]:checked').value,Number.parseFloat(document.querySelector('[name="quality"]').value)),r=document.createElement("img");r.setAttribute("src",e),r.classList.add("camera-output-image"),t.innerHTML="",t.appendChild(r),document.querySelector(".size span").innerHTML=Math.round(3*e.length/4/1024)}Array.from(document.querySelectorAll('.field-property + [type="range"]')).forEach((e=>{const r=e.parentNode.querySelector(".field-value");e.setAttribute("data-default",e.value),e.addEventListener("input",(()=>{if(r.innerHTML=e.value,a[e.name]=Number.parseFloat(e.value),"volume"===e.name){const r=document.querySelector(".volume-state use");e.value<30?r.setAttribute("xlink:href","picture/sprite.svg#volume-mute"):e.value>=30&&e.value<=70?r.setAttribute("xlink:href","picture/sprite.svg#volume-down"):e.value>70&&r.setAttribute("xlink:href","picture/sprite.svg#volume-up")}})),["mousedown","touchstart"].forEach((t=>{e.addEventListener(t,(()=>{r.innerHTML=e.value,r.classList.add("field-update")}),{passive:!0})})),["mouseup","touchend"].forEach((t=>{e.addEventListener(t,(()=>{r.classList.remove("field-update")}))}))})),Array.from(document.querySelectorAll('[name="blend"]')).forEach((e=>{e.addEventListener("change",(()=>{a.blend="none"===e.value?{}:{mode:e.value,color:getComputedStyle(r).getPropertyValue("background-color")}}))})),Array.from(document.querySelectorAll('[name="filter"]')).forEach((e=>{e.addEventListener("change",(()=>{const r={none:null,noise:e=>{let r=Math.random();return[r*e.red,r*e.green,r*e.blue,e.alpha]},grayscale:e=>{let r=.2126*e.red+.7152*e.green+.0722*e.blue;return[r,r,r,e.alpha]},invert:e=>[255-e.red,255-e.green,255-e.blue,e.alpha],threshold:e=>.2126*e.red+.7152*e.green+.0722*e.blue>=100?[255,255,255,255]:[0,0,0,255],sobel:e=>{let r=Math.abs(e.x),t=Math.abs(e.y);return[e.red+r,e.green+t,e.blue+(r+t)/4,255]},pixel:e=>e.offset%10!=0?[window.red,window.green,window.blue,255]:(window.red=e.red,window.green=e.green,window.blue=e.blue,[e.red,e.green,e.blue,255])};a.filter=r[e.value]}))})),Array.from(document.querySelectorAll('[name="mirror"]')).forEach((e=>{e.addEventListener("change",(()=>{a.mirror="1"===e.value}))})),document.querySelector('[name="snap"]').addEventListener("click",(()=>{let e=a.snap(),r=document.createElement("canvas");r.setAttribute("width",a.hardware.video.width),r.setAttribute("height",a.hardware.video.height),r.getContext("2d").putImageData(e,0,0),r.classList.add("cell","camera-thumbnail"),console.log(`${a.hardware.video.width} x ${a.hardware.video.height}`),t.innerHTML="",t.appendChild(r)})),Array.from(document.querySelectorAll('[name="format"]')).forEach((e=>{e.addEventListener("change",(()=>{n()}))})),document.querySelector('[name="quality"]').addEventListener("input",(()=>{n()}))})();